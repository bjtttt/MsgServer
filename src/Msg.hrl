%% Generated by the Erlang ASN.1 compiler version:2.0
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition,in module Msg



-record('T-generalReply',{
replyNum, id, result}).

-record('P-generalReply',{
replyNum, id, result}).

-record('T-heartbeat',{
none}).

-record('P-dividePackageRequest',{
originalityMsgNum, packageCount, packageId}).

-record('T-register',{
provinceId, cityId, proId, terminalType, terminalId, plateColor, carMark}).

-record('P-regReply',{
replyNum, result, authentication}).

-record('T-cancel',{
none}).

-record('T-checkCode',{
authentication}).

-record('P-SetArgs',{
argsCount, argsList}).

-record('P-SetArgs_argsList',{
id, len, value}).

-record('P-queryArgs',{
none}).

-record('P-querySpecifyArgs',{
argsCount, argsIdLists}).

-record('T-queryArgsReply',{
replyNum, replyCount, argsLists}).

-record('P-control',{
orderWord, orderARgs}).

-record('P-queryArr',{
none}).

-record('T-queryArrReply',{
terType, proId, terModel, terId, iCCID, hardwareVersion, firmware, gNSSArr, communicateArr}).

-record('P-updatePackage',{
updateType, proId, versionLen, version, updatePacLen, updatePacket}).

-record('T-updateResult',{
updateType, updateResult}).

-record('T-positionReport',{
positionBaseMsg, positionAppMsg}).

-record('T-positionReport_positionBaseMsg',{
alarmSymbol, state, latitude, longitude, hight, speed, direction, time}).

-record('T-positionReport_positionAppMsg',{
id, len, appendMsg}).

-record('P-queryPositoin',{
none}).

-record('T-queryPosReply',{
replyNum, positionMsgReply}).

-record('P-tmpPosTrackControl',{
interval, posTracksValidity}).

-record('T-manConfirmAlarm',{
number, type}).

-record('P-txtSend',{
symbol, textMsg}).

-record('P-eventSet',{
setType, setCount, eventsList}).

-record('P-eventSet_eventsList',{
id, contentLen, content}).

-record('T-eventReport',{
id}).

-record('T-questionSend',{
symbol, queConLen, question, ansLists}).

-record('T-questionReply',{
number, answerId}).

-record('P-msgMenuSet',{
setType, msgItemCount, msgItemList}).

-record('P-msgMenuSet_msgItemList',{
msgType, msgNameLen, msgName}).

-record('T-msgProOrCancel',{
msgType, playOrCancelSymbol}).

-record('P-msgService',{
type, len, content}).

-record('T-telAnswer',{
symbol, number}).

-record('P-setTelNote',{
settype, conCount, conItem}).

-record('P-carControl',{
symbol}).

-record('T-carConReply',{
number, msgBody}).

-record('P-setRotundityArea',{
setArr, areaCount, areaItems}).

-record('P-delRotundityArea',{
areaCount, areaId}).

-record('P-setRectangleArea',{
setArr, areaCount, areaItem}).

-record('P-delRectangleArea',{
areaCount, areaId}).

-record('P-setPolygonArea',{
id, attribute, startTime, endTime, highSpeed, overspeedTime, overallCount, overallItem}).

-record('P-delPolygonArea',{
areaCount, areaId}).

-record('P-setLine',{
id, attribute, startTime, endTime, yieldingPointCount}).

-record('P-delLine',{
pathLineCount, pathId}).

-record('P-recordCollectionOrder',{
orderWord, dataBlock}).

-record('T-recordUpdate',{
number, orderWord, dataBlock}).

-record('P-recordArgsSend',{
orderWord, dataBlock}).

-record('T-electronInvoiceReport',{
length, content}).

-record('T-repIdeRequest',{
none}).

-record('T-ideColReport',{
state, time, idReadResult, nameLen, name, certificateNumber, organizationLen, organization, validity}).

-record('T-siteDataUpdate',{
dataItemCount, positionDadaType, positionItem}).

-record('T-CANDataUpdate',{
dataItemCount, canRecTime, canDataItem}).

-record('T-multimediaEventUpdate',{
id, type, code, eventItemCode, pipeId}).

-record('T-multimediaDataUpdate',{
id, type, code, eventCode, pipeId, msgBody, dataPackage}).

-record('P-multimediaDataReply',{
id, pacCount, idItems}).

-record('P-shootOrder',{
pipeId, order, time, saveSymbol, distinguishRate, quality, brightness, contrast, sat, chroma}).

-record('T-shootOrderReply',{
replyNum, result, mediaIdCount, mediaIdLists}).

-record('P-stoMulDataSearch',{
mediaType, pipeId, eventCode, startTime, endTime}).

-record('T-stoMulDataReply',{
replyNum, mediaItemCount, mediaId, mediaType, pipeId, eventCode, positionMsgReply}).

-record('T-stoMulDataUpdate',{
mediaType, pipeId, eventCode, startTime, endTime, delSymbol}).

-record('P-recordStartOrder',{
recordCode, recordTime, saveSymbol, voiceSamplingRate}).

-record('T-singlestoMulDataSeaUpdOrder',{
mediaId, delSymbol}).

-record('P-dataSend',{
msgType, msgContent}).

-record('T-dataUpdate',{
msgType, msgContent}).

-record('T-compressUpdtae',{
compressMsgLen, compressMsgBody}).

-record('P-RSA',{
e, n}).

-record('T-RSA',{
e, n}).

